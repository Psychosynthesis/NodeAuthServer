import{r as u,j as l}from"./libs-178596fd.js";(function(){const o=document.createElement("link").relList;if(o&&o.supports&&o.supports("modulepreload"))return;for(const e of document.querySelectorAll('link[rel="modulepreload"]'))n(e);new MutationObserver(e=>{for(const s of e)if(s.type==="childList")for(const i of s.addedNodes)i.tagName==="LINK"&&i.rel==="modulepreload"&&n(i)}).observe(document,{childList:!0,subtree:!0});function t(e){const s={};return e.integrity&&(s.integrity=e.integrity),e.referrerPolicy&&(s.referrerPolicy=e.referrerPolicy),e.crossOrigin==="use-credentials"?s.credentials="include":e.crossOrigin==="anonymous"?s.credentials="omit":s.credentials="same-origin",s}function n(e){if(e.ep)return;e.ep=!0;const s=t(e);fetch(e.href,s)}})();const f=(r,o)=>{switch(o.type){case"setUserData":return{...r,user:o.load};case"setToken":return{...r,token:o.load};case"clearError":return{...r,error:[],networkError:null};case"pushError":return{...r,error:[...r.error,o.load]};case"setNetworkError":return{...r,networkError:o.load};default:throw new Error(`Unhandled action type: ${o.type}`)}},d=u.createContext(void 0),p=u.createContext(void 0),h={user:{username:null,userId:null,email:null,telegramUsername:null,telegramId:null},token:null,error:[],networkError:null},I=({children:r})=>{const[o,t]=u.useReducer(f,h);return l.jsx(d.Provider,{value:o,children:l.jsx(p.Provider,{value:t,children:r})})},m=()=>{const r=u.useContext(d);if(typeof r>"u")throw new Error("useAppState must be used within a AppStoreProvider");return r},g=()=>{const r=u.useContext(p);if(typeof r>"u")throw new Error("useAppDispatch must be used within a AppStoreProvider");return r},y=()=>[m(),g()],w=3e3,E="VERIFICATION_CODE",P="http://127.0.0.1:"+w+"/",x={"Content-Type":"application/json","x-verification-code":E},c=({url:r,method:o,headers:t,body:n})=>window.fetch(P+r,{method:o,headers:{...x,...t},credentials:"include",body:JSON.stringify(n)}).then(e=>e.ok?e.json():Promise.reject(e)).then(e=>({error:!1,data:e})).catch(e=>typeof e.json=="function"?(console.error("API error full info: ",e),e.json().then(s=>(console.error("Json error from API: ",s),s)).catch(()=>(console.error("Generic error from API: ",e.statusText),e))):(console.error("Fetch error: ",e),e)),A=()=>c({url:"api/auth/updateToken",method:"POST"}),k=({username:r,pass:o})=>c({url:"api/auth/login",method:"POST",body:{username:r,pass:o}}),O=({username:r,mail:o,pass:t})=>c({url:"api/auth/register",method:"POST",body:{username:r,mail:o,pass:t}}),S=r=>c({url:"api/auth/getUser",method:"GET",headers:{authorization:"Bearer "+r}}),a={error:!0,data:null},T=()=>{const[r,o]=y();return{updateToken:async()=>{try{const t=await A();return t.error?{...a,message:t.message}:{...a,error:!1,data:t.data}}catch(t){return t.message}},register:async t=>{try{const n=await O(t);return n.error?{...a,message:n.message}:{...a,error:!1,data:n.data}}catch(n){return n.message}},login:async t=>{var n;try{const e=await k(t);return!((n=e.data)!=null&&n.token)||e.error?{...a,message:e.message}:{...a,error:!1,data:e.data}}catch(e){return e.message}},getUser:async()=>{try{if(!r.token)throw new Error("No token!");const t=await S(r.token);return t.error?{...a,message:t.message}:{...a,error:!1,data:t.data}}catch(t){return{...a,message:t.message}}}}};export{I as A,y as a,T as u};
